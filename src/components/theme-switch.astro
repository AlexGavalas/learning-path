---
import Button from '~components/button.astro';
import {
    DEFAULT_THEME,
    THEME,
    DARK_IMG_PROPS,
    LIGHT_IMG_PROPS,
} from '~constants';

const themeCookie = Astro.cookies.get('theme');
const theme = themeCookie?.value ?? DEFAULT_THEME;

const attributes = theme === THEME.LIGHT ? LIGHT_IMG_PROPS : DARK_IMG_PROPS;
---

<theme-switch>
    <form method="get">
        <input type="hidden" name="theme" value="toggle" />
        <Button variant="wrapper">
            <img {...attributes} width="20" height="20" />
        </Button>
    </form>
</theme-switch>

<script>
    import { getInitialTheme, setThemeInPage } from '~lib/theme';
    import { THEME, DARK_IMG_PROPS, LIGHT_IMG_PROPS } from '~constants';
    import { updateAttributes } from '~lib/element';

    class ThemeSwitch extends HTMLElement {
        buttonElement: HTMLButtonElement | null;
        imageElement: HTMLImageElement | null;
        theme: string;

        constructor() {
            super();

            this.buttonElement = this.querySelector('button');
            this.imageElement = this.querySelector('img');
            this.theme = getInitialTheme();
            this.setTheme(this.theme);
        }

        setTheme = (newTheme: string) => {
            setThemeInPage(newTheme);

            const attributes =
                newTheme === THEME.LIGHT ? LIGHT_IMG_PROPS : DARK_IMG_PROPS;

            if (this.imageElement) {
                updateAttributes({ element: this.imageElement, attributes });
            }

            this.theme = newTheme;
        };

        toggleTheme = (e: MouseEvent) => {
            this.setTheme(
                this.theme === THEME.LIGHT ? THEME.DARK : THEME.LIGHT,
            );

            e.preventDefault();
        };

        connectedCallback() {
            this.buttonElement?.addEventListener('click', this.toggleTheme);
        }

        disconnectedCallback() {
            this.buttonElement?.removeEventListener('click', this.toggleTheme);
        }
    }

    customElements.define('theme-switch', ThemeSwitch);
</script>
